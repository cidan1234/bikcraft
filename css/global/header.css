/* padding organiza o espaço interno e margin organiza o espaço externo. */

/* Padding protege o conteúdo; margin protege o espaço ao redor. */

.header-bg {
  background-color: var(
    --cor-12
  ); /* cor de fundo definida em utilidades/cores.css */
}

.header {
  display: flex; /* ativa o formato flexbox ( um ao lado do outro) */
  flex-wrap: wrap; /* quebra de linha caso seja necessário */
  gap: 20px; /* distância entre os blocos de elementos */
  justify-content: space-between; /* define espaçamento igual entre os itens */
  align-items: center; /* centraliza os itens verticalmente */
  padding-top: 20px; /* distância acima */
  padding-bottom: 20px; /* distância abaixo */
}

.header-menu {
  display: flex; /* ativa o formato flexbox ( um ao lado do outro) */
  flex-wrap: wrap; /* quebra de linha caso seja necessário */
  gap: 40px; /* distância entre os elementos do menu */
}

.header-menu a {
  display: inline-block; /* define um elemento como um "bloco em linha", quando a tela for reduzida e ficar um abaixo do outro manterá o padding */
  padding: 16px 0px; /* distâncias acima/abaixo esquerda/direita, nesse caso aumentará a área de contato do link pra cima e para baixo, para facilitar o click */
  position: relative; /*faz o elemento permanecer no fluxo normal da página (na sua posição original) - usado para travar o conteúdo caso tenha outro conteúdo no bloco que precisa ser alterada sua posição (o outro elemento será position: absolute)*/
}

.header-menu a::after {
  /* aparecerá após o elemento (abaixo), neste caso será uma linha (sublinhado)*/
  content: ""; /*conteúdo, normalmente se usa vazio mesmo*/
  display: block; /*faz o elemento se comportar como um bloco*/
  height: 2px; /* altura */
  width: 0px; /* largura */
  background: var(--cor-0); /* cor de fundo definida em utilidades/cores.css */
  margin-top: 4px; /* margem acima */
  transition: 0.3s; /* faz uma animação no elemento*/
  position: absolute; /*faz com que o elemento seja removido do fluxo normal, posicionando-o relativamente ao elemento pai (ao bloco q foi definido como position:relative, se não tivesse um elemento pai com a configuração de position ele seria movido em relação ao html ou body)*/
}

.header-menu a:hover::after {
  /* aparecerá após o elemento (abaixo) e quando passar o mouse*/
  width: 100%; /* largura total igual do elemento pai */
}

@media (max-width: 800px) {
  /*se a tela for menor que 800px de largura irá executar este bloco*/
  .header-menu {
    gap: 20px; /* distância entre os elementos do menu */
  }
  .header-menu a {
    background: var(
      --cor-11
    ); /* cor de fundo definida em utilidades/cores.css */
    padding: 12px 16px; /* distâncias acima/abaixo esquerda/direita, nesse caso irá parecer um botão */
    border-radius: 4px; /* arredondamento de borda */
  }
  .header-menu a:hover {
    /* aparecerá ao passar o mouse */
    background-color: var(
      --cor-10
    ); /* cor de fundo definida em utilidades/cores.css */
  }
  .header a::after {
    /* aparecerá após o elemento (abaixo)*/
    display: none; /* neste caso está retirando o elemento criado anteriormente */
  }
}

@media (max-width: 600px) {
  /* se a tela for menor que 600px de largura irá executar este bloco*/
  .header-menu {
    gap: 12px; /* distância entre os elementos do menu */
  }
  .header-menu a {
    padding: 8px 12px; /* distâncias acima/abaixo esquerda/direita, nesse caso irá parecer um botão menor */
    font-size: 14px; /* tamanho do texto */
  }
}
